路径查找

对于文件系统来说, 当我们open("/home/andrewli/test/a.c", ...)时, 显然分析这个长长
的字符串, 最终找到a.c这个文件所在的磁盘位置是件必须要完成的任务. 我称这个过程为路
径查找. 如果我们使用的文件系统为ext2, 显然这个过程要ext2来完成. 我们无需讨论这个
ext2的实现细节, 也可以想象对于一个长长的路径来说, 目录和文件在磁盘上的存储很可能
是离散的, ext2可能需要反复读取多次磁盘, 才有可能完成一次路径查找. 所以内核建立了
一套通用的, 适用于各类文件系统的cache机制, 用来缓存文件系统路径查找后生成的数据,
在cache命中时, 路径查找就等同于读内存, 性能当然要高于读磁盘.

本文就是要讨论VFS这套cache机制: dcache

路径拆分

我们以/home/andrewli/test/a.c 这个路径作为例子, 引入内核dcache中使用的一些数据结
构.

首先, 路径是个层次结构, 找到andrewli这个目录的前提是首先要找到home, 根据这个特性
我们可以知道 知道子目录的必要条件有2个:
1. 你找到了父目录
2. 你知道子目录的名字

有一个例外就是第一次层, 也就是根目录"/", 它没有父目录, 找到它是通过其它手段.

这个路径可以被拆为5个项:
其中4个目录1个普通文件: /, home, andrewli, test, a.c
内核使用struct dentry数据结构来描述上面中的任一项,

其中根目录"/"是个非常特殊的部分, 因为它是路径查找的起始点.


